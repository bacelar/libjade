###

TOP = $(shell git rev-parse --show-toplevel)
SRC = $(TOP)/src/
CDIR = $(realpath $(dir $(realpath $(firstword $(MAKEFILE_LIST)))))
RDIR = $(subst $(SRC),,$(CDIR))
PDIR = $(TOP)/proof/$(RDIR)
OPERATION = $(word 1, $(subst /, ,$(RDIR)))
NAMESPACE = $(subst crypto_,jade_, $(subst -,_,$(subst /,_,$(RDIR))))

#
JEXT ?= jazz
JFLAGS := $(JFLAGS) -noinsertarraycopy
JINCLUDE = -I Jade:$(SRC)
JASMIN ?= jasminc
JASMINC := $(JASMIN) $(JFLAGS) $(JINCLUDE)
COMPILE = $(JASMINC) -o $@ $<

#
ECDIR := $(PDIR)
include $(SRC)/$(OPERATION)/EcFlags.mk
ECFLAGS = $(subst namespace,$(NAMESPACE),$(ECFN)) -oec $(notdir $@)
EXTRACT = cd $(ECDIR) && $(JASMINC) $(ECFLAGS) $(CDIR)/$<
EXTRACT_CT = cd $(ECDIR) && $(JASMINC) -CT $(ECFLAGS) $(CDIR)/$<

#
DEPSDIR := .deps
DEPS = (bash -c 'echo -n "$@: "'; $(JASMINC) -print-dependencies $<) > $(DEPSDIR)/$(@F).d

###

compile: $(SRCS:%.$(JEXT)=%.s)
	@true

###

extract: extract_s extract_ct
	@true

extract_s: $(SRCS:%.$(JEXT)=$(ECDIR)/%_s.ec)
	@true

extract_ct: $(SRCS:%.$(JEXT)=$(ECDIR)/%_ct.ec)
	@true

###

check-sct: $(SRCS)
	$(JASMINC) -checkSCT $<

# usage: """make check-scton F=[funtion_name]"""
check-scton: $(SRCS)
	$(JASMINC) -checkSCTon $(F) $<

###

%.s : %.$(JEXT)
%.s : %.$(JEXT) $(DEPSDIR)/%.s.d | $(DEPSDIR)
	@$(DEPS)
	@$(COMPILE)

$(ECDIR)/%_s.ec : %.$(JEXT)
$(ECDIR)/%_s.ec : %.$(JEXT) $(DEPSDIR)/%_s.ec.d | $(DEPSDIR) $(ECDIR)
	@$(DEPS)
	@$(EXTRACT)

$(ECDIR)/%_ct.ec : %.$(JEXT)
$(ECDIR)/%_ct.ec : %.$(JEXT) $(DEPSDIR)/%_ct.ec.d | $(DEPSDIR) $(ECDIR)
	@$(DEPS)
	@$(EXTRACT_CT)

###

$(DEPSDIR): ; @mkdir -p $@
$(ECDIR): ; @mkdir -p $@; touch $@/.gitkeep

DEPFILES := \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%.s.d) \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%_s.ec.d) \
 $(SRCS:%.$(JEXT)=$(DEPSDIR)/%_ct.ec.d)

$(DEPFILES):

include $(wildcard $(DEPFILES))

###

clean:
	@rm -fr $(DEPSDIR) *.s *.o *.a
